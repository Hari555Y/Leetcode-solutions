{"id":718605715,"lang":"java","time":"5 days, 8 hours","timestamp":1654834845,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/718605715/","is_pending":"Not Pending","title":"Sort Integers by The Number of 1 Bits","memory":"46 MB","code":"class Solution {\n    public int[] sortByBits(int[] arr) {\n        int n = arr.length;\n        pair[] purr = new pair[arr.length];\n        int[] ans = new int[n];\n        for(int i =0; i<n; i++){\n            purr[i] = bitc(arr[i]);\n        }\n        \n        Arrays.sort(purr, (a,b)-> (a.oneb==b.oneb) ? a.val -b.val : a.oneb-b.oneb);\n                   // (a,b)-> bitc(a) == bitc(b) ? a-b : bitc(a)-bitc(b));\n        for(int i =0; i<n; i++)\n            ans[i] = purr[i].val;\n        return ans;\n    }\n    public static pair bitc(int a){\n        return new pair(a,Integer.bitCount(a));\n    }\n}\nclass pair{\n    int val;\n    int oneb;\n    public pair(int val, int oneb){\n        this.val = val;\n        this.oneb = oneb;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sort-integers-by-the-number-of-1-bits"}