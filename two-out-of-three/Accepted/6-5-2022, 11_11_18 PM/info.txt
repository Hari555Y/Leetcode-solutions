{"id":715123532,"lang":"java","time":"1 week, 2 days","timestamp":1654450878,"status_display":"Accepted","runtime":"18 ms","url":"/submissions/detail/715123532/","is_pending":"Not Pending","title":"Two Out of Three","memory":"48.3 MB","code":"class Solution {\n    public List<Integer> twoOutOfThree(int[] A, int[] B, int[] C) {\n        ArrayList<Integer> ans = new ArrayList<Integer>();\n        HashSet<Integer> s1 = new HashSet<Integer>();\n        HashSet<Integer> s2 = new HashSet<Integer>();\n        HashSet<Integer> s3 = new HashSet<Integer>();\n        for (int i :A){\n            s1.add(i);\n        }\n        for (int i :B){\n            s2.add(i);\n        }\n        for (int i :C){\n            s3.add(i);\n        }\n        HashMap<Integer,Integer> map = new HashMap<Integer,Integer>();\n        for (int r :s1){\n            map.put(r, map.getOrDefault(r, 0) + 1);\n        }\n        for (int m :s2){\n            map.put(m, map.getOrDefault(m, 0) + 1);\n        }\n        for (int j :s3){\n            map.put(j, map.getOrDefault(j, 0) + 1);\n        }\n        for (int s:map.keySet()){\n            if (map.get(s)>=2){\n                ans.add(s);\n                \n            }\n        }\n        Collections.sort(ans);\n        return ans;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"two-out-of-three"}