{"id":602188836,"lang":"java","time":"6Â months","timestamp":1639564486,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/602188836/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"40.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isValidBST(TreeNode root) {\n        return ist(root.left,(long)((long)Integer.MIN_VALUE-1L), (long)root.val)&&ist(root.right, (long)root.val, (long)((long)Integer.MAX_VALUE+1L));\n    }\n    public static boolean ist(TreeNode t, long a, long b){\n        if (t==null){\n            return true;\n        }\n        if (t.val >a && t.val <b){\n            return ist(t.left, a, t.val)&&ist(t.right, t.val, b);\n        }\n        return false;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree"}