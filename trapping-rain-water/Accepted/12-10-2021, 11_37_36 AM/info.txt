{"id":599685659,"lang":"java","time":"6 months, 1 week","timestamp":1639116456,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/599685659/","is_pending":"Not Pending","title":"Trapping Rain Water","memory":"39.3 MB","code":"class Solution {\n    public int trap(int[] height) {\n        List<Integer> A = new ArrayList<>();\n        for (int  i : height){\n            A.add(i);\n        } \n        int max = Integer.MIN_VALUE; int max2 = Integer.MIN_VALUE;\n        int[] lmax =  new int[A.size()];\n        int[] rmax =  new int[A.size()];\n        for (int i =0; i<A.size();i++ ){\n            max = Math.max(max,A.get(i));\n            lmax[i]= max;\n        }\n        for (int i =A.size()-1; i>=0;i-- ){\n            max2 = Math.max(max2,A.get(i));\n            rmax[i]= max2;\n        }\n        int count =0;\n        for (int i =1; i<A.size()-1; i++){\n            count += Math.min(lmax[i],rmax[i])- A.get(i);\n            \n        }\n        return count;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"trapping-rain-water"}