{"id":525535668,"lang":"java","time":"10 months, 4 weeks","timestamp":1626793508,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/525535668/","is_pending":"Not Pending","title":"Coordinate With Maximum Network Quality","memory":"N/A","code":"class Solution {\n    public int[] bestCoordinate(int[][] towers, int radius) {\n        int minX,minY,maxX,maxY;\n        minX=minY=Integer.MAX_VALUE;\n        maxY=maxX=Integer.MIN_VALUE;\n        \n        if (towers.length == 1 && towers[0][2]!=0)\n        {\n            int[] arr = new int[2];\n            arr[0]=towers[0][0];\n            arr[1]=towers[0][1];\n            return arr;\n        }\n        for (int i=0;i<towers.length;i++)\n        {\n            minX = Math.min(minX , towers[i][0]);\n            maxX = Math.max(maxX , towers[i][0]);\n            \n            minY = Math.min(minY , towers[i][0]);\n            maxY = Math.max(maxY , towers[i][0]);\n        }\n        \n        minX-=radius;\n        maxX+=radius;\n        \n        minY-=radius;\n        maxY+=radius;\n        \n        if (minX < 0)\n            minX=0;\n        \n        if (minY < 0)\n            minY=0;\n        \n        int maxQuality = Integer.MIN_VALUE;\n        int[] ans=new int[2];\n        int quality=0;\n        for (int i=minX;i<=maxX;i++)\n            for (int j=minY;j<=maxY;j++)\n            {\n                quality=0;\n                for (int k=0;k<towers.length;k++)\n                {\n                    double dist = Math.sqrt( Math.pow((i-towers[k][0]),2) +\n                                         Math.pow((j-towers[k][1]),2));\n                    \n                    if (dist <= (double)radius)\n                     quality += (int)Math.floor(towers[k][2]/(1+dist));      \n                }\n                if (quality > maxQuality)\n                        {\n                            maxQuality = quality;\n                            ans[0] = i;\n                            ans[1] = j;\n                        }\n                \n                else if (quality == maxQuality && i<ans[0])\n                        {\n                            ans[0] = i;\n                            ans[1] = j;\n                        }\n                \n                else if (quality==maxQuality && i==ans[0] && j<ans[1])\n                        {\n                            ans[0] = i;\n                            ans[1] = j;\n                        }\n            }\n        \n        return ans;\n    }\n}","compare_result":"111111101111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"coordinate-with-maximum-network-quality"}