{"id":663710536,"lang":"java","time":"2 months, 3 weeks","timestamp":1647782063,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/663710536/","is_pending":"Not Pending","title":"Minimum Domino Rotations For Equal Row","memory":"N/A","code":"class Solution {\n    public int minDominoRotations(int[] tops, int[] bottoms) {\n        int fir = tops[0];\n        int sec = bottoms[0];\n        boolean bool = true;\n        int n = tops.length;\n        for(int i =0; i<n; i++){\n            if (tops[i]!=fir && bottoms[i]!=fir){\n                bool = false;\n                break;\n            }\n        }\n        int x = -1;\n        int y = -1;\n        if (bool == true){\n            x = fir;\n        \n        }\n        for(int j =0; j<n; j++){\n            if(tops[j]!=sec && bottoms[j]!=sec){\n                bool = false;\n                break; \n            }\n            if (j == n-1){\n                bool = true;\n                y = sec;\n            }\n            \n        }\n        System.out.println(x);\n        System.out.print(bool);\n        if ( x ==-1 && bool == false){\n            return -1;\n        }\n        int c1 =0; int c2 =0;\n        if (x!=-1){\n            for(int i =0; i<n; i++){\n                if (tops[i]!=x){\n                    c1++;\n                }\n\n            }\n        }\n        if (y!=-1){\n            for(int i =0; i<n; i++){\n                if (bottoms[i]!=y){\n                    c2++;\n                }\n\n            }\n        }\n        \n        return x!=-1 && y!=-1 ? Math.min(c1, c2) : Math.max(c1, c2);\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111101110011111011110111101","title_slug":"minimum-domino-rotations-for-equal-row"}