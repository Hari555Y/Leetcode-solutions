{"id":446943013,"lang":"java","time":"1 year, 4 months","timestamp":1611452011,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/446943013/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"42 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isBalanced(TreeNode root) {\n        if (root==null){\n            return true;\n        }\n        int lh = height(root.left);\n        int rh = height(root.right);\n        if( Math.abs(lh-rh)<=1 && isBalanced(root.left) && isBalanced(root.right)){\n            return true;\n            \n        }\n        return false;\n        \n    }\n    public int height(TreeNode node){\n        if (node == null){\n            return 0;\n        }\n        else{\n            return 1+ Math.max(height(node.left),height(node.right));\n            \n        }\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree"}