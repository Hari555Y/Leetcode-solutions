{"id":672899200,"lang":"java","time":"2 months, 1 week","timestamp":1648982129,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/672899200/","is_pending":"Not Pending","title":"Next Permutation","memory":"44.3 MB","code":"class Solution {\n    public void nextPermutation(int[] nums) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        for(int i : nums)\n            ans.add(i);\n        ArrayList<Integer> news = nextP(ans);\n        for(int i = 0 ; i<nums.length; i++){\n            nums[i] = news.get(i);\n        }\n        return;\n        \n    }\n        public ArrayList<Integer> nextP(ArrayList<Integer> A) {\n        int l = A.size()-1;\n        int turn =-1;\n        while(l>=1){\n            if (A.get(l-1)<A.get(l)){\n                turn = l-1;\n                break;\n            }\n            l--;\n        }\n        if(turn ==-1){\n            Collections.reverse(A);\n            return A;\n        }\n        int last = A.size()-1;\n        while(last>turn){\n            if(A.get(last)>A.get(turn)){\n                int temp = A.get(last); int tempo = A.get(turn);\n                A.set(turn, temp);\n                A.set(last, tempo);\n                break;\n            }\n            last--;\n        }\n        ArrayList<Integer> myans = new ArrayList<Integer>();\n        List<Integer> ne = A.subList(turn+1, A.size());\n        Collections.sort(ne);\n        myans.addAll(A.subList(0, turn+1));\n        myans.addAll(ne);\n        return myans;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"next-permutation"}