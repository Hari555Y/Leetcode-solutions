{"id":451415351,"lang":"java","time":"1 year, 4 months","timestamp":1612340941,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/451415351/","is_pending":"Not Pending","title":"Count Servers that Communicate","memory":"61.9 MB","code":"class Solution {\n    public int countServers(int[][] grid) {\n        int m  =grid.length;\n        int n = grid[0].length;\n        Map<Integer,Integer> col = new HashMap();\n        Map<Integer,Integer> row = new HashMap();\n        \n        for(int i= 0; i<m; i++){\n            for (int j =0; j<n; j++){\n                if (grid[i][j]==1){\n                    row.compute(i,(k,v) -> v==null?1:v+1);\n                    col.compute(j,(k,v) -> v==null?1:v+1);\n                }\n            }\n        }\n        int count=0;\n        for (int i =0; i< m; i++){\n            for (int j=0; j<n; j++){\n                if (grid[i][j]==1 &&(row.get(i)!=1 || col.get(j)!=1)){\n                    count +=1;\n                }\n                else{\n                    continue;\n                }\n                \n            }\n        }\n        return count;      \n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"count-servers-that-communicate"}