{"id":595401971,"lang":"java","time":"6 months, 2 weeks","timestamp":1638358038,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/595401971/","is_pending":"Not Pending","title":"Maximum Sum Circular Subarray","memory":"N/A","code":"class Solution {\n    public int maxSubarraySumCircular(int[] nums) {\n        int ans=Integer.MAX_VALUE;\n        int sum=0;\n        int sum1=0;\n        int sum2=0;\n        for(int i=0;i<nums.length;i++){\n            sum=sum+nums[i];\n            if(ans>sum){\n                ans=sum;\n            }\n            if(sum>0){\n                sum=0;\n            }\n        }\n        int ans1=Integer.MIN_VALUE;\n        for(int i=0;i<nums.length;i++){\n            sum1=sum1+nums[i];\n            if(ans1<sum1){\n                ans1=sum1;\n            }\n            if(sum1<0){\n                sum1=0;\n            }\n        }\n        for(int j=0;j<nums.length;j++){\n            sum2=sum2+nums[j];\n        }\n        int q=sum2+Math.abs(sum);\n        return Math.max(q,ans1);\n        \n    }\n}","compare_result":"10110111010001101110111011001100001101100011101101111011001011100011100101100100011110000001101100001100111011","title_slug":"maximum-sum-circular-subarray"}