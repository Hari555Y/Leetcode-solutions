{"id":682219362,"lang":"java","time":"1 month, 4 weeks","timestamp":1650209041,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/682219362/","is_pending":"Not Pending","title":"Increasing Order Search Tree","memory":"39.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    static TreeNode ans = new TreeNode(0);\n    TreeNode temp = ans;\n    public TreeNode increasingBST(TreeNode root) {\n        inorder(root);\n        return temp.right;\n        \n    }\n     public static void inorder(TreeNode t){\n         if(t==null){\n             return;\n         }\n         inorder(t.left);\n         ans.right = new TreeNode(t.val);\n         ans = ans.right;\n         inorder(t.right);\n     }\n}","compare_result":"1111111111111111111111111111111111111","title_slug":"increasing-order-search-tree"}