{"id":525354318,"lang":"java","time":"11Â months","timestamp":1626763248,"status_display":"Accepted","runtime":"1589 ms","url":"/submissions/detail/525354318/","is_pending":"Not Pending","title":"Unique Length-3 Palindromic Subsequences","memory":"42.2 MB","code":"class Solution {\n    public int countPalindromicSubsequence(String s) {\n        if(s.length() <3){\n            return 0;\n        }\n        HashSet<String> hash = new HashSet<>();\n        for (char c ='a'; c<='z'; c++){\n            int i1 = s.indexOf(c);\n            int i2 = s.lastIndexOf(c);\n            if(i1!=-1 && i2!=-1 && i2-i1>1){\n                for (int k =i1+1; k<i2; k++){\n                    hash.add(String.valueOf(s.charAt(i1))+ String.valueOf(s.charAt(k))+String.valueOf(s.charAt(i2)));\n                }\n            }\n            \n        }\n\n        return hash.size();\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"unique-length-3-palindromic-subsequences"}