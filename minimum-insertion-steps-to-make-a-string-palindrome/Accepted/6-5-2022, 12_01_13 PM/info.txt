{"id":714768365,"lang":"java","time":"1 week, 3 days","timestamp":1654410673,"status_display":"Accepted","runtime":"103 ms","url":"/submissions/detail/714768365/","is_pending":"Not Pending","title":"Minimum Insertion Steps to Make a String Palindrome","memory":"55.4 MB","code":"class Solution {\n    // public static void minoper(int a, int b){\n    //     a = Math.min(a, b);\n    // }\n    public int minInsertions(String s) {\n        int a = s.length();\n        int ans = 1000000007;\n        int[][] dp = new int[a][a];     \n        int inf = 1000000007;\n        for(int i =0; i<a; i++){\n            for(int j =0; j<a; j++){\n                dp[i][j] = 1000000007;\n            }\n        }\n        dp[0][a-1] =0;\n        for(int l =0; l<a; l++){\n            for(int r = a-1; r>=l; r--){\n                int ds = dp[l][r];\n                if(l==r){\n                    ans = Math.min(ans, ds);\n                    System.out.println(ans);\n                    continue;\n                }\n                if(s.charAt(l)==s.charAt(r)){\n                    if(l+1 ==r){\n                        ans = Math.min(ans, ds);\n                        System.out.println(ans);\n                        continue;\n                    }\n                    dp[l+1][r-1] = Math.min(dp[l+1][r-1] , ds);\n                    \n                    \n                }\n                else{\n                    dp[l+1][r]= Math.min(dp[l+1][r] , ds+1);\n                    dp[l][r-1] = Math.min(dp[l][r-1] , ds+1);\n\n                    \n                }\n                \n                \n            }\n        }\n        return ans;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-insertion-steps-to-make-a-string-palindrome"}