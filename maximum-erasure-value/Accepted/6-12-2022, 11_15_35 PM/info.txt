{"id":720618981,"lang":"java","time":"2 days, 18 hours","timestamp":1655055935,"status_display":"Accepted","runtime":"98 ms","url":"/submissions/detail/720618981/","is_pending":"Not Pending","title":"Maximum Erasure Value","memory":"124.4 MB","code":"class Solution {\n    public int maximumUniqueSubarray(int[] nums) {\n        int n = nums.length;\n        int[] pref = new int[n];\n        for(int i  =0 ; i<n ; i++){\n            if (i>0){\n                pref[i] = pref[i-1];\n            }\n            pref[i] +=nums[i];\n        }\n        HashMap<Integer,Integer> hash = new HashMap<>();\n        int s = 0;\n        int sum  = 0;\n        for(int i =0; i<n; i++){\n            s = Math.max(s, hash.get(nums[i])!=null ? hash.get(nums[i])+1 : 0);\n            sum = Math.max(sum , (s==0) ? pref[i] : pref[i] - pref[s-1]);\n            hash.put(nums[i] , i);\n            \n            \n        }\n        return sum;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-erasure-value"}