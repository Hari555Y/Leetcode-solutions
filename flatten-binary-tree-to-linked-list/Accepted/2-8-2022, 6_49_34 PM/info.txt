{"id":637162381,"lang":"java","time":"4Â months","timestamp":1644326374,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/637162381/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"42.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public void flatten(TreeNode root) {\n        if (root ==null){\n            return;\n        }\n        if(root.left==null &&  root.right == null){\n            return;\n        }\n        if(root.left!=null){\n            flatten(root.left);\n            TreeNode temp = root.right;\n            root.right = root.left;\n            root.left = null;\n            \n            TreeNode curr = root.right;\n            while(curr.right!=null){\n                curr = curr.right;\n            }\n            curr.right = temp;\n        }\n        flatten(root.right);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flatten-binary-tree-to-linked-list"}