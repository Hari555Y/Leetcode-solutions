{"id":477172489,"lang":"java","time":"1 year, 2 months","timestamp":1617697682,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/477172489/","is_pending":"Not Pending","title":"Add One Row to Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode addOneRow(TreeNode root, int val, int depth) {\n        if (depth==1){\n            TreeNode newroot = new TreeNode(val);\n          //  newroot.val = val;\n            newroot.left = root;\n            return newroot;\n            \n        }\n        else{\n            Queue<TreeNode> qu = new LinkedList<>();\n            qu.add(root);\n            int d = 1;\n         //   TreeNode fakel = root;\n           // TreeNode faker = root;\n            while (depth-1 >d){\n                for (int i =0; i<qu.size(); i++){\n                    TreeNode pehla = qu.poll();\n                    if (pehla.left !=null){\n                        qu.add(pehla.left);\n                    }\n                    if (pehla.right!=null){\n                        qu.add(pehla.right);\n                    }\n                    //qu.poll();\n                    \n                }\n                d++;    \n            }\n            for (int h =0; h< qu.size();h++){\n                TreeNode chut = qu.poll();\n                TreeNode ass = new TreeNode(val);\n                TreeNode fuck = new TreeNode(val);\n                    //TreeNode ass, fuck;\n               // ass.val = val;\n                //fuck.val = val;\n                ass.left = chut.left;\n                fuck.right = chut.right;\n                chut.left = ass;\n                chut.right = fuck;\n            }\n            return root;\n        }\n        \n    }\n    \n//\n}","compare_result":"1110111111011110110011111111111110011111010111011111011111111111111111101111000111010010001011100000100101001","title_slug":"add-one-row-to-tree"}