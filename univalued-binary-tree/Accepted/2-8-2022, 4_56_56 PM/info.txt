{"id":637120084,"lang":"java","time":"4 months, 1 week","timestamp":1644319616,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/637120084/","is_pending":"Not Pending","title":"Univalued Binary Tree","memory":"41.7 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isUnivalTree(TreeNode root) {\n        if(root == null){\n            return true;\n        }\n        if(root.right != null && root.right.val != root.val){\n            return false;\n            \n        }\n        if(root.left != null && root.left.val != root.val){\n            return false;\n            \n            \n        }\n//         boolean bool = false;\n//         if(root.left!=null){\n            \n//         }\n        return isUnivalTree(root.left) && isUnivalTree(root.right);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"univalued-binary-tree"}