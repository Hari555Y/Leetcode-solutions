{"id":710337596,"lang":"java","time":"2 weeks, 2 days","timestamp":1653898145,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/710337596/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode mergeKLists(ListNode[] lists) {\n        ListNode dummy = new ListNode(-1); ListNode temp = dummy;\n        Queue<ListNode> pq = new PriorityQueue<>(new Comparator<ListNode>(){\n            @Override\n            public int compare(ListNode l1,ListNode l2){\n                return l1.val-l2.val;\n            }\n        } );\n        for (ListNode r : lists){\n            pq.add(r);\n            \n        }\n        while(!pq.isEmpty()){\n            ListNode curr = pq.poll();\n            ListNode fori = new ListNode(curr.val);\n            temp.next = fori;\n            temp = temp.next;\n            if (curr.next !=null){\n                pq.add(curr.next);\n            }\n        }\n        return dummy.next;\n        \n    }\n}","compare_result":"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"merge-k-sorted-lists"}