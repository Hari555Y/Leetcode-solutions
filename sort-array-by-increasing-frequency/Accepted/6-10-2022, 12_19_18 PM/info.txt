{"id":718701530,"lang":"java","time":"5 days, 5 hours","timestamp":1654843758,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/718701530/","is_pending":"Not Pending","title":"Sort Array by Increasing Frequency","memory":"44.9 MB","code":"class Solution {\n    public int[] frequencySort(int[] nums) {\n        PriorityQueue<pair> pq = new PriorityQueue<>((a, b)-> a.freq==b.freq ? b.val-a.val : a.freq -b.freq);\n        HashMap<Integer,Integer> hash = new HashMap<>();\n        for(int i : nums){\n            hash.put(i, hash.getOrDefault(i, 0)+1);\n        }\n        for(int i : nums){\n            pq.add(new pair(i,hash.get(i)));\n        }\n        int[] ans = new int[nums.length];\n        int i =0;\n        while(pq.size()>0){\n            pair m = pq.poll();\n            ans[i++] = m.val;\n        }\n        return ans;\n        \n    }\n}\nclass pair{\n    int val;int freq;\n    public pair(int val, int freq){\n        this.val = val; this.freq = freq;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sort-array-by-increasing-frequency"}