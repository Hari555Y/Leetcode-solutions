{"id":485706156,"lang":"java","time":"1 year, 1 month","timestamp":1619498300,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/485706156/","is_pending":"Not Pending","title":"Binary Gap","memory":"N/A","code":"class Solution {\n    public int binaryGap(int n) {\n        String s = todec(n);   // int max =0;\n        ArrayList<Integer>  arr= new ArrayList<>(); \n        for (int i =0; i<s.length(); i++){\n            if (s.charAt(i)==1'){\n                arr.add(i);   \n            }  \n            \n        }\n        int max =0;\n        if(arr.isEmpty() || arr.size()==1){\n            return 0;\n        }\n        else{\n            for (int k =0; k<arr.size()-1;k++){\n                max = Math.max(max, arr.get(k+1)-arr.get(k));\n                \n            }\n            \n            \n        }\n    return max;\n        \n    }\n    public static String  todec(int num)\n    {\n        StringBuilder sb = new StringBuilder();\n       //tringBuilder d assigning binary array size\n       //nt[] binary = new int[35];\n        //t id = 0;\n  \n        // Number should be positive\n        while (num > 0) {\n            sb.insert(0, num%2);\n           //inary[id++] = num % 2;\n            num = num / 2;\n        }\n        return sb.toString();\n  \n        // Print Binary\n       //rintBinary(binary, id);\n    }\n}","compare_result":null,"title_slug":"binary-gap"}