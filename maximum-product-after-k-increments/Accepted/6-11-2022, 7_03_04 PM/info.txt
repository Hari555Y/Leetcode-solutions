{"id":719602981,"lang":"java","time":"3 days, 22 hours","timestamp":1654954384,"status_display":"Accepted","runtime":"457 ms","url":"/submissions/detail/719602981/","is_pending":"Not Pending","title":"Maximum Product After K Increments","memory":"128.3 MB","code":"class Solution {\n    public int maximumProduct(int[] nums, int k) {\n        PriorityQueue<Integer> pq = new PriorityQueue<>();\n        for(int i : nums){\n            pq.add(i);\n        }\n        while(k-->0){\n            int x = pq.poll();\n            pq.add(x+1);\n        }\n        long ans = 1;\n        while(pq.size()>0){\n            int x = pq.poll();\n            ans = (ans*(long)x)%1000000007L;\n        }\n        return (int)(ans%1000000007L);\n        \n        \n    }\n    \n    \n    /*\n    a>x;\n    a*(x+1)    (a+1)*x\n    ax + a     ax + x\n    \n    */\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-after-k-increments"}