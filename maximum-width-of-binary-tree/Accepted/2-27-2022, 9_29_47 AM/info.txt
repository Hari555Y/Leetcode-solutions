{"id":649648177,"lang":"java","time":"3 months, 2 weeks","timestamp":1645934387,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/649648177/","is_pending":"Not Pending","title":"Maximum Width of Binary Tree","memory":"43.7 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int widthOfBinaryTree(TreeNode root) {\n        ArrayDeque<pair> q= new ArrayDeque<>();\n        int ans = 0;\n        q.addFirst(new pair(root,0));\n        while(q.size()!=0){\n            int p = q.size();\n            int f = q.getFirst().n;\n            int r = q.getLast().n;;\n            for(int i =0; i<p; i++){\n                pair m = q.poll();\n                TreeNode x = m.t;\n                int n = m.n;\n                if(x.left!=null){\n                    q.addLast(new pair(x.left, 2*n+1));\n                }\n                if(x.right!=null){\n                    q.addLast(new pair(x.right, 2*n+2));\n                }\n                  \n            }\n            ans = Math.max(ans, r-f+1);\n            \n        }\n        return ans;\n        \n    }\n}\nclass pair{\n    int n;\n    TreeNode t;\n    public pair(TreeNode t, int n){\n        this.t = t;\n        this.n = n;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-width-of-binary-tree"}