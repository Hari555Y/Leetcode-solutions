{"id":675247734,"lang":"java","time":"2 months, 1 week","timestamp":1649274893,"status_display":"Accepted","runtime":"74 ms","url":"/submissions/detail/675247734/","is_pending":"Not Pending","title":"3Sum With Multiplicity","memory":"43.8 MB","code":"class Solution {\n    public int threeSumMulti(int[] A, int target) {\n        int MOD = 1000000007;\n        long ans = 0;\n        Arrays.sort(A);\n\n        for (int i = 0; i < A.length; ++i) {\n            int T = target - A[i];\n            int j = i+1, k = A.length - 1;\n            while (j < k) {\n                if (A[j] + A[k] < T)\n                    j++;\n                else if (A[j] + A[k] > T)\n                    k--;\n                else if (A[j] != A[k]) {\n                    int left = 1, right = 1;\n                    while (j+1 < k && A[j] == A[j+1]) {\n                        left++;\n                        j++;\n                    }\n                    while (k-1 > j && A[k] == A[k-1]) {\n                        right++;\n                        k--;\n                    }\n\n                    ans += left * right;\n                    ans %= MOD;\n                    j++;\n                    k--;\n                } else {\n                    // M = k - j + 1\n                    // We contributed M * (M-1) / 2 pairs.\n                    ans += (k-j+1) * (k-j) / 2;\n                    ans %= MOD;\n                    break;\n                }\n            }\n        }\n\n        return (int) ans;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum-with-multiplicity"}