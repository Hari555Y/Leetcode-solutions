{"id":718594549,"lang":"java","time":"5 days, 8 hours","timestamp":1654833741,"status_display":"Accepted","runtime":"46 ms","url":"/submissions/detail/718594549/","is_pending":"Not Pending","title":"Find Subsequence of Length K With the Largest Sum","memory":"46.3 MB","code":"class Solution {\n    public int[] maxSubsequence(int[] nums, int k) {\n        int n = nums.length;\n     //   int sum =0;\n        int[] ans = new int[k];\n        PriorityQueue<pair> pq = new PriorityQueue<>((a,b)-> b.val-a.val);\n        PriorityQueue<pair> pm = new PriorityQueue<>((a, b)->a.ind-b.ind);\n        for(int i =0; i<n ; i++){\n            pq.add(new pair(i, nums[i]));\n        }\n        int i =0; \n        while(i<k){\n            pair m = pq.poll();\n            System.out.println(m.val);\n            pm.add(m);    \n            i++;\n        }\n        \n       // i =0;\n        for(int s =0; s<k; s++){\n            pair t = pm.poll();\n            System.out.println(t.val);\n            ans[s] = t.val;\n        }\n        return ans;\n        \n        \n    }\n}\nclass pair{\n    int ind;\n    int val;\n    public pair(int ind, int val){\n        this.ind = ind;\n        this.val = val;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"find-subsequence-of-length-k-with-the-largest-sum"}