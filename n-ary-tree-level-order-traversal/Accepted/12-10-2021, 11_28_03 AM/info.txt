{"id":599681854,"lang":"java","time":"6 months, 1 week","timestamp":1639115883,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/599681854/","is_pending":"Not Pending","title":"N-ary Tree Level Order Traversal","memory":"40.2 MB","code":"/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public List<Node> children;\n\n    public Node() {}\n\n    public Node(int _val) {\n        val = _val;\n    }\n\n    public Node(int _val, List<Node> _children) {\n        val = _val;\n        children = _children;\n    }\n};\n*/\n\nclass Solution {\n    public List<List<Integer>> levelOrder(Node root) {\n        List<List<Integer>> ans = new ArrayList<>();\n        if (root ==null){\n            return ans;\n        }\n        Queue<Node> q = new LinkedList<>();\n        q.add(root);\n        while(!q.isEmpty()){\n            int siz = q.size();\n            List<Integer> ne = new ArrayList<>();\n            while(siz-->0){\n                Node t = q.poll();\n                ne.add(t.val);\n                if (t.children !=null)\n                    q.addAll(t.children);   \n            }\n            ans.add(ne); \n        }\n        \n        return ans;\n    }\n}","compare_result":"11111111111111111111111111111111111111","title_slug":"n-ary-tree-level-order-traversal"}