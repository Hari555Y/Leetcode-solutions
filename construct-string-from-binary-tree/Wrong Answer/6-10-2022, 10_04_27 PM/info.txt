{"id":719005231,"lang":"java","time":"4 days, 19 hours","timestamp":1654878867,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/719005231/","is_pending":"Not Pending","title":"Construct String from Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    static String ans = \"\";\n    public String tree2str(TreeNode root) {\n       // String ans = \"\";\n        pre(root);\n        return ans;\n        \n    }\n    public static void pre(TreeNode root){\n        if (root == null){\n            return;\n        }\n        else{\n        ans+= String.valueOf(root.val);\n        if(root.left!=null){\n                    ans += '(';\n            pre(root.left);\n            ans += ')';}\n      \n        if (root.right!=null){\n              ans +='(';\n            pre(root.right);\n        ans +=')';}}\n        \n    }\n}","compare_result":"1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"construct-string-from-binary-tree"}