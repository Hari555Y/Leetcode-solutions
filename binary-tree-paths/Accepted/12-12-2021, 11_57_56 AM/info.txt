{"id":600604997,"lang":"java","time":"6Â months","timestamp":1639290476,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/600604997/","is_pending":"Not Pending","title":"Binary Tree Paths","memory":"38.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<String> binaryTreePaths(TreeNode root) {\n        List<String> ans = new ArrayList<>();\n        StringBuilder sb = new StringBuilder();\n        dop(root, sb, ans);\n        return ans;\n        \n    }\n    public void dop(TreeNode root, StringBuilder sb, List<String> ans){\n        if (root == null){\n            return;\n        }\n        if (root.left == null && root.right==null){\n            sb.append(root.val);\n            ans.add(sb.toString());\n            return;\n        }\n        sb.append(root.val + \"->\");\n        dop(root.left, new StringBuilder(sb), ans);\n        dop(root.right, new StringBuilder(sb), ans);\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-paths"}