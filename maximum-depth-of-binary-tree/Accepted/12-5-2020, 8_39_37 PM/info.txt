{"id":427449876,"lang":"java","time":"1 year, 6 months","timestamp":1607180977,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/427449876/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"39.5 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int maxDepth(TreeNode root) {\n        if (root == null){\n            return 0;\n        }\n        else{\n            int left_max_depth = maxDepth(root.left);\n            int right_max_depth = maxDepth(root.right);\n            int mydepth;\n            mydepth = Math.max(left_max_depth , right_max_depth)+1;\n            return mydepth;\n        }\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-depth-of-binary-tree"}