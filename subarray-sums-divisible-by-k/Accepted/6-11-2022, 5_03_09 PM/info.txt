{"id":719543819,"lang":"java","time":"4Â days","timestamp":1654947189,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/719543819/","is_pending":"Not Pending","title":"Subarray Sums Divisible by K","memory":"64.3 MB","code":"class Solution {\n    public int subarraysDivByK(int[] nums, int k) {\n        int n = nums.length;\n        int[] rem = new int[n];\n        int sum =0;\n        for(int i =0 ; i<n; i++){ sum += nums[i];\n            rem[i] = sum%k;\n            if (rem[i]<0){\n                rem[i] += k;\n            }\n        }\n        HashMap<Integer,Integer> hash = new HashMap<>();\n        hash.put(0,1);\n        int count =0;\n        for(int i =0 ; i<n; i++){\n            if(hash.containsKey(rem[i])){\n                count += hash.get(rem[i]);\n            }\n            hash.put(rem[i], hash.getOrDefault(rem[i], 0)+1);\n        }\n        return count;\n    }\n}\n\n\n// [4,2,6, 7, 8]\n //       4, 6, 12, 19, 27\n   //   0  2, 0 , 3, 3\n// 4","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subarray-sums-divisible-by-k"}