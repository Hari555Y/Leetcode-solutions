{"id":720130829,"lang":"java","time":"3 days, 9 hours","timestamp":1655004465,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/720130829/","is_pending":"Not Pending","title":"Lucky Numbers in a Matrix","memory":"49.6 MB","code":"class Solution {\n    public List<Integer> luckyNumbers (int[][] matrix) {\n        List<Integer> ans = new ArrayList<>();\n                List<Integer> a = new ArrayList<>();\n        List<Integer> b = new ArrayList<>();\n        int n  = matrix.length;\n        int m = matrix[0].length;\n        for(int i =0; i<n ; i++){\n            int min = Integer.MAX_VALUE;\n            for(int j=0; j<m; j++){\n                min = Math.min(min,matrix[i][j]);\n                \n            }\n            a.add(min);\n            \n        }\n        for(int i =0; i<m ; i++){\n            int min = Integer.MIN_VALUE;\n            for(int j=0; j<n; j++){\n                min = Math.max(min,matrix[j][i]);\n                \n            }\n            b.add(min);\n            \n        }\n        for(int i =0; i<n ; i++){\n            for(int j =0; j<m ; j++){\n                if (matrix[i][j] == a.get(i) && matrix[i][j] == b.get(j)){\n                   // count++;\n                    ans.add(matrix[i][j]);\n                }\n            }\n        }\n        return ans;\n\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"lucky-numbers-in-a-matrix"}