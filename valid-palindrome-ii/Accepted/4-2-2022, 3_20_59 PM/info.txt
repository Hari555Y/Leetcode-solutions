{"id":672141198,"lang":"java","time":"2 months, 2 weeks","timestamp":1648893059,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/672141198/","is_pending":"Not Pending","title":"Valid Palindrome II","memory":"58.2 MB","code":"class Solution {\n    public boolean validPalindrome(String s) {\n        if (s==null || s.length()==0 || s.length()==1 || s.length() ==2){\n            return true;\n        }\n        else{\n            int apt = 0;\n            int bpt = s.length()-1;\n            while(apt<=bpt){\n                if (s.charAt(apt)!=s.charAt(bpt)){\n                    return ispalindrome(s.substring(0,apt)+s.substring(apt+1,s.length()))||ispalindrome(s.substring(0,bpt)+s.substring(bpt+1,s.length()));\n                }\n                apt++;\n                bpt--;\n                \n            }\n            return true;\n        }\n        \n        \n    }\n    public boolean ispalindrome(String s){\n        if (s==null || s.length() ==1 || s.length()==0){\n            return true;\n        }\n        else{\n            int apointer =0;\n            int bpointer =s.length()-1;\n            while(apointer<=bpointer){\n                if (s.charAt(apointer)!=s.charAt(bpointer)){\n                    return false;\n                }\n                apointer++;\n                bpointer--;\n                \n            }\n            return true;\n            \n        }\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"valid-palindrome-ii"}