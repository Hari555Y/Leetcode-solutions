{"id":599698293,"lang":"java","time":"6 months, 1 week","timestamp":1639118337,"status_display":"Accepted","runtime":"883 ms","url":"/submissions/detail/599698293/","is_pending":"Not Pending","title":"Maximum Average Subarray I","memory":"49 MB","code":"class Solution {\n    public double findMaxAverage(int[] nums, int k) {\n        if (nums.length<k){\n            return 0;\n        }\n       // double max =0.0;\n        int sum =0;\n        for (int i =0; i<k; i++){\n            sum +=nums[i]; \n        }\n        int max = sum;\n        System.out.println(max);\n        for (int i =k; i<nums.length; i++){\n            sum -=nums[i-k];\n            sum += nums[i];\n            System.out.println(sum);\n            max = Math.max(max, sum);\n            \n            \n        }\n        return (double)max/(double)k;\n        \n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-average-subarray-i"}