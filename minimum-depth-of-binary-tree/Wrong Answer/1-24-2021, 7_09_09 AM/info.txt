{"id":446944649,"lang":"java","time":"1 year, 4 months","timestamp":1611452349,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/446944649/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int minDepth(TreeNode root) {\n        return height(root);\n        \n        \n    }\n    public int height(TreeNode node){\n        if (node== null){\n            return 0;\n        }\n        else{\n            return 1+Math.min(height(node.left),height(node.right));\n        }\n    }\n}","compare_result":"1011001100010111101001000101000110100001111111110011","title_slug":"minimum-depth-of-binary-tree"}