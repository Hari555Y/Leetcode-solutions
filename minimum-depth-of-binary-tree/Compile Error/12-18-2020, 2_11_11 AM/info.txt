{"id":431744322,"lang":"java","time":"1 year, 5 months","timestamp":1608237671,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/431744322/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int minDepth(TreeNode root) {\n        if (root==null){\n            return 0;\n        }\n        else{\n            int l = minDepth(root.left);\n            int m = minDepth(root.right);\n            mymindepth = Math.min(l,m)+1;\n            return mymindepth;\n            \n        }\n        \n    }\n}","compare_result":null,"title_slug":"minimum-depth-of-binary-tree"}