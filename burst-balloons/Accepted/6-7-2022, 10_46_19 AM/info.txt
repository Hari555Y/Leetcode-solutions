{"id":716267929,"lang":"java","time":"1 week, 1 day","timestamp":1654578979,"status_display":"Accepted","runtime":"77 ms","url":"/submissions/detail/716267929/","is_pending":"Not Pending","title":"Burst Balloons","memory":"42.6 MB","code":"class Solution {\n    public int maxCoins(int[] nums) {\n        int n = nums.length;\n        if (n==0){return 0;}\n        int[][] dp = new int[n][n];\n        for(int L = n-1; L>=0; L--){\n            for(int R = L; R<n; R++){\n                for(int i = L; i<=R; i++){\n                    dp[L][R] = Math.max(dp[L][R] , \n                                       \n                          (L==0 ? 1 : nums[L-1])*nums[i]*(R==n-1 ? 1 : nums[R+1]) + \n                                      (i-1>=L ? dp[L][i-1] : 0 ) + (i+1 <=R? dp[i+1][R] : 0 ));\n                }\n            }\n        }\n        \n        \n        \n        return dp[0][n-1];\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"burst-balloons"}