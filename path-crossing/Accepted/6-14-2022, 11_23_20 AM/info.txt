{"id":721821768,"lang":"java","time":"1 day, 6 hours","timestamp":1655186000,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/721821768/","is_pending":"Not Pending","title":"Path Crossing","memory":"42.4 MB","code":"class Solution {\n    public boolean isPathCrossing(String s) {\n        HashSet<Integer> hash = new HashSet<>();\n        hash.add(0);\n        int n= s.length();\n        int sx =0;\n        int sy =0;\n        for(int i =0 ; i<n ; i++){\n            if(s.charAt(i)=='N'){\n                sy++;\n            }\n            else if(s.charAt(i)=='S'){\n                sy--;\n            }\n            else if (s.charAt(i)=='W'){\n                sx--;\n            }\n            else{\n                sx++;\n            }\n            if (hash.contains(100000*sx + sy)){\n                return true;\n            }  \n            hash.add(100000*sx+sy);\n        }\n        return false;\n        \n    }\n}\nclass pair{\n    int x; int y;\n    public pair(int x, int y){\n        this.x = x;\n        this.y = y;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-crossing"}