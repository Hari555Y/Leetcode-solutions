{"id":446960764,"lang":"java","time":"1 year, 4 months","timestamp":1611455543,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/446960764/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"38.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode invertTree(TreeNode root) {\n        reverse(root);\n        return root;\n    }\n    public void reverse(TreeNode node){\n        if (node==null){\n            return;\n        }\n        else{\n            reverse(node.left);\n            reverse(node.right);\n            TreeNode temp = node.left;\n            node.left = node.right;\n            node.right = temp;\n        }\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree"}