{"id":599691206,"lang":"java","time":"6 months, 1 week","timestamp":1639117271,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/599691206/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"38.7 MB","code":"class Solution {\n    public int maxProduct(int[] nums) {\n        List<Integer> A = new ArrayList<>();\n        for(int i: nums){\n            A.add(i);\n        }\n        int len = A.size();\n        if (len==0){\n            return 0;\n        }\n        int minsofar = A.get(0);\n        int maxsofar = A.get(0);\n        int ans = A.get(0);\n        for (int i =1; i<len ;i++){\n            int temp = minsofar;\n            int tempi = maxsofar;\n            minsofar = Math.min(A.get(i),Math.min( A.get(i)*temp, A.get(i)*tempi));\n            maxsofar = Math.max(A.get(i),Math.max( A.get(i)*temp, A.get(i)*tempi));\n            ans = Math.max(maxsofar, ans);\n            \n        }\n        return ans;\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-subarray"}