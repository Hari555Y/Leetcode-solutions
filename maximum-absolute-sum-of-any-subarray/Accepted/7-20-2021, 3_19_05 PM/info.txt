{"id":525424933,"lang":"java","time":"11Â months","timestamp":1626774545,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/525424933/","is_pending":"Not Pending","title":"Maximum Absolute Sum of Any Subarray","memory":"48.1 MB","code":"class Solution {\n    public int maxAbsoluteSum(int[] nums) {\n        int [] nums2 = new int[nums.length];\n        for (int x= 0; x< nums.length; x++){\n            nums2[x] = (-1)*nums[x];\n        }\n      //  int ans = Integer.MIN_VALUE;\n        int maxvalue = Integer.MIN_VALUE; int maxendinghere= 0;\n        for (int i =0; i < nums.length ;i ++){\n            maxendinghere = maxendinghere + nums[i];\n            if (maxendinghere> maxvalue){\n                maxvalue = maxendinghere;\n            }\n            if (maxendinghere<0){\n                maxendinghere = 0;\n            }\n        }\n        int maxvalue2 = Integer.MIN_VALUE; int maxendinghere2= 0;\n        for (int i =0; i < nums.length ;i ++){\n            maxendinghere2 = maxendinghere2 + nums2[i];\n            if (maxendinghere2> maxvalue2){\n                maxvalue2 = maxendinghere2;\n            }\n            if (maxendinghere2<0){\n                maxendinghere2 = 0;\n            }\n        }\n        return Math.max(maxvalue, maxvalue2);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-absolute-sum-of-any-subarray"}