{"id":477639068,"lang":"java","time":"1 year, 2 months","timestamp":1617792084,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/477639068/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"39.1 MB","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public boolean hasCycle(ListNode head) {\n        if (head==null||head.next==null){\n            return false;\n        }\n        HashSet<ListNode> hs = new HashSet<>();\n        int i =0;ListNode temp =head;\n        while(temp.next!=null){\n            if (hs.contains(temp)){\n                return true;\n            }\n            else{\n                hs.add(temp);\n            }\n            temp = temp.next;\n        }\n        return false;\n        \n    }\n}","compare_result":"1111111111111111111","title_slug":"linked-list-cycle"}