{"id":447621959,"lang":"java","time":"1 year, 4 months","timestamp":1611579173,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/447621959/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public boolean hasCycle(ListNode head) {\n        if (head.next == null){\n            return false;\n        }\n        ListNode curr = head;\n        ListNode hare = head.next.next;\n        ListNode tort = head.next;\n        while (curr.next.next != null){\n            if (hare == tort){\n                return true;\n            }\n            hare = hare.next.next;\n            tort = tort.next;\n            curr = curr.next;\n            \n            \n        }\n        return false;\n        \n        \n    }\n}","compare_result":"11100000000000000","title_slug":"linked-list-cycle"}