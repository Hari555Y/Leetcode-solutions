{"id":477637134,"lang":"java","time":"1 year, 2 months","timestamp":1617791579,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/477637134/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public boolean hasCycle(ListNode head) {\n        HashSet<Integer> hs = new HashSet<>();\n        int i =0;\n        while(head.next!=null){\n            if (hs.contains(i)){\n                return false;\n            }\n            else{\n                hs.add(i)\n            }\n            i+=\n        }\n        \n    }\n}","compare_result":null,"title_slug":"linked-list-cycle"}