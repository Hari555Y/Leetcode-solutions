{"id":721164237,"lang":"java","time":"2 days, 1 hour","timestamp":1655118090,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/721164237/","is_pending":"Not Pending","title":"Prime Arrangements","memory":"41.1 MB","code":"class Solution {\n    static int mod = 1000000007;\n    public int numPrimeArrangements(int n) {\n        int c =0;\n        for(int i = 1; i<=n ; i++){\n            if(isprime(i)){\n                c++;\n            }\n        }\n        return (int)((fact(c)*fact(n-c))%(long)mod);    \n    }\n    public static boolean isprime(int n){\n        if (n==0 || n==1){\n            return false;\n        }\n        if (n==2){\n            return true;\n        }\n        for(int i =2; i<n ; i++){\n            if(n%i==0){\n                return false;\n            }\n        }\n        return true;\n    }\n    \n    public static long fact(int n){\n        if (n==0){\n            return 1L;\n        }\n        return (long)((fact(n-1)%(long)mod)*(long)n)%(long)mod;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"prime-arrangements"}