{"id":721445510,"lang":"java","time":"1 day, 18 hours","timestamp":1655144504,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/721445510/","is_pending":"Not Pending","title":"4Sum","memory":"44.2 MB","code":"\nclass Solution {\n    public List<List<Integer>> fourSum(int[] nums, int target) {\n        List<List<Integer>> ans = new ArrayList<>();\n        \n        if (nums.length < 4) return ans; \n        \n        Arrays.sort(nums);\n        \n        int len = nums.length; \n        \n        for (int i=0; i<len-3; i++) {\n            if (i > 0 && nums[i] == nums[i-1]) continue; \n            \n            for (int j=i+1; j<len-2; j++) { \n            \n                if (j>i+1 && nums[j] == nums[j-1]) continue;\n                \n                int left = j+1; \n                int right = len-1; \n                \n                while(left < right) { \n                    int sum = nums[i] + nums[j] + nums[left] + nums[right]; \n                    \n                    if (sum > target) { \n                        right -= 1; \n                        while(right > left && nums[right] == nums[right+1]) right -= 1;\n                    }\n                    else if (sum < target) { \n                        left += 1; \n                        while(left < right && nums[left] == nums[left-1]) left += 1; \n                    } \n                    else { \n                        ans.add(Arrays.asList(nums[i], nums[j], nums[left], nums[right]));\n                        \n                        left += 1; \n                        right-=1;\n                        while(left < right && nums[left] == nums[left-1]) left += 1;\n                        while(right>left && nums[right]==nums[right+1]) right-=1;\n                    }\n                }\n            }\n        }\n        \n        return ans; \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"4sum"}