{"id":600150435,"lang":"java","time":"6Â months","timestamp":1639212067,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/600150435/","is_pending":"Not Pending","title":"House Robber III","memory":"38.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int rob(TreeNode root) {\n        return robbing(root).a;\n        \n        \n    }\n    public static pair robbing(TreeNode root){\n        if(root==null){\n            return new pair(0,0);\n        }\n        pair l = robbing(root.left);\n        pair r = robbing(root.right);\n        return new pair( Math.max(root.val + l.b+r.b ,l.a+r.a ),l.a + r.a);\n    }\n}\nclass pair{\n    int a; int b;\n    public pair(int a, int b){\n        this.a =a;\n        this.b =b;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"house-robber-iii"}