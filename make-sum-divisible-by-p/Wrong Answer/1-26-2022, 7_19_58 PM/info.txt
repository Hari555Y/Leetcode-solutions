{"id":628271314,"lang":"java","time":"4 months, 2 weeks","timestamp":1643204998,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/628271314/","is_pending":"Not Pending","title":"Make Sum Divisible by P","memory":"N/A","code":"class Solution {\n    public int minSubarray(int[] nums, int p) {\n        int n = nums.length;\n        int[] ps = new int[n];\n        long sum = 0;\n        for(int i =0; i<n; i++){\n            sum = ((long)sum+(long)nums[i])%(long)p;\n            ps[i] = (int)sum;\n            \n        }\n        HashMap<Integer, Integer> hash = new HashMap<>();\n        hash.put(0, -1);\n        if(ps[n-1]==0){\n            return 0;\n        }\n        int max = n;\n        for(int i =0; i<n; i++){\n            if (hash.get(0)==-1 && ps[i]==0){\n                max = Math.max(max, i+1);\n                hash.put(0,i);\n            }\n            else if (hash.containsKey(ps[i])){\n                max = Math.min (max, i- hash.get(ps[i])-1);\n                hash.put(ps[i], i);\n            }\n            else{\n                hash.put(ps[i], i);\n            }\n            \n        }return max;\n        \n        \n    }\n}","compare_result":"1010111000110000000010000000000010100000000001000000000000000000000001000000001000000000000000000001000000000000000000000000000000000000000110","title_slug":"make-sum-divisible-by-p"}