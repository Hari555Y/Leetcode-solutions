{"id":658232970,"lang":"java","time":"3Â months","timestamp":1647061928,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/658232970/","is_pending":"Not Pending","title":"Copy List with Random Pointer","memory":"45.2 MB","code":"/*\n// Definition for a Node.\nclass Node {\n    int val;\n    Node next;\n    Node random;\n\n    public Node(int val) {\n        this.val = val;\n        this.next = null;\n        this.random = null;\n    }\n}\n*/\n\nclass Solution {\n    public Node copyRandomList(Node head) {\n        HashMap<Node,Node> hash = new HashMap<>();\n        Node finalhead = head;\n        while(head!=null){\n            hash.put(head, new Node(head.val));\n            head = head.next;\n        }\n        for(Node x: hash.keySet()){\n            hash.get(x).next= hash.get(x.next);\n            hash.get(x).random = hash.get(x.random);\n        }\n        return hash.get(finalhead);\n    }\n}","compare_result":"1111111111111111111","title_slug":"copy-list-with-random-pointer"}