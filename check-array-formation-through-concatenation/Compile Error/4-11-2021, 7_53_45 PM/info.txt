{"id":479315053,"lang":"java","time":"1 year, 2 months","timestamp":1618151025,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/479315053/","is_pending":"Not Pending","title":"Check Array Formation Through Concatenation","memory":"N/A","code":"class Solution {\n    public boolean canFormArray(int[] arr, int[][] pieces) {\n        HashMap<Integer,Integer> has = new HashMap<>();\n        for (int i=0; i<arr.length;i++){\n            has.put(arr[i], i);\n        }\n        for (int i =0; i<pieces.length; i++){\n            if (pieces[i].length==1){\n                if (has.containsKey(pieces[i])){\n                    has.remove(pieces[i]);\n                }\n                else{\n                    return false;\n                }\n            }\n            else{\n                int tel = pieces[i].length;\n                for (int j =0; j<tel-1;j++){\n                    if (!has.containsKey(pieces[i][j]) || !has.containsKey(pieces[i][j+1])){\n                        return false;\n                    }\n                    else if (has.getValue(pieces[i][j]) +1 != has.getValue(pieces[i][j+1]) ){\n                        return false;\n                    }\n                    else{\n                        remove(pieces[i][j]);\n                    }\n                }\n            }\n        }\n        if (has.isEmpty()){\n            return true;\n        }\n        else{\n            return false;\n                            \n         }\n        \n    }\n}","compare_result":null,"title_slug":"check-array-formation-through-concatenation"}