{"id":605878434,"lang":"java","time":"5 months, 3 weeks","timestamp":1640242190,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/605878434/","is_pending":"Not Pending","title":"Number of Islands","memory":"46.8 MB","code":"class Solution {\n    public int numIslands(char[][] grid) {\n        int m=grid.length;\n        int n=grid[0].length;\n       \n        int ans=0;\n        boolean visited[][]=new boolean[m][n];\n        for(int i=0;i<m;i++){\n            for(int j=0;j<n;j++){\n                if(!visited[i][j] && grid[i][j]=='1'){\n                    count(grid,i,j,visited);\n                    ans++;\n                }   \n            }\n        }\n        return ans;\n    }\n    public void count(char[][] grid,int i,int j,boolean [][] visited){\n        if(i<0 || j<0 || j>=grid[0].length || i>=grid.length || grid[i][j]=='0' || visited[i][j]==true){\n            return;\n        }\n        visited[i][j]=true;\n        count(grid,i,j+1,visited);\n        count(grid,i,j-1,visited);\n        count(grid,i+1,j,visited);\n        count(grid,i-1,j,visited);\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"number-of-islands"}