{"id":599671085,"lang":"java","time":"6 months, 1 week","timestamp":1639114247,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/599671085/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"37.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<Integer> preorderTraversal(TreeNode root) {\n        List<Integer> ls = new ArrayList<>();\n        f(root, ls);\n        return ls;\n        \n    }\n    public static void f(TreeNode root, List<Integer> ls){\n        if (root==null){\n            return;\n        }\n        ls.add(root.val);\n        f(root.left, ls);\n        f(root.right, ls);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal"}