{"id":600584518,"lang":"java","time":"6Â months","timestamp":1639287399,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/600584518/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"40.5 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        return lca(root, p.val, q.val);\n    }\n    public boolean find(TreeNode A , int B){\n        if(A==null){\n            return false;\n        }\n        if(A.val==B){\n            return true;\n        }\n        return find(A.left,B)||find(A.right,B);\n    }\n    public static TreeNode ans(TreeNode a, int b, int c){\n        if(a==null){\n            return null;\n        }\n        if(a.val==b||a.val==c){\n            return a;\n        }\n        TreeNode left = ans(a.left,b,c);\n        TreeNode right = ans(a.right,b,c);\n        if(left!=null&&right!=null){\n            return a;\n            \n        }\n        if(left!=null){\n            return left;\n        }\n        if(right!=null){\n            return right;\n        }\n        return null;\n    }\n    \n    public TreeNode lca(TreeNode A, int B, int C) {\n        if(find(A,B)&&find(A,C)){\n            return ans(A,B,C);\n            \n        }    \n        return  null;\n        \n    }\n}","compare_result":"1111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree"}