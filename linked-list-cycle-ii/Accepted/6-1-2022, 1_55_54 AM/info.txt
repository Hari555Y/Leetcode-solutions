{"id":711536140,"lang":"java","time":"2Â weeks","timestamp":1654028754,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/711536140/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"46.2 MB","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public ListNode detectCycle(ListNode head) {\n        HashSet<ListNode> hash = new HashSet<>();\n        while(head!=null){\n            if (hash.contains(head)){\n                return head;\n            }\n            hash.add(head);\n            head = head.next;\n        }\n        return null;\n    }\n}","compare_result":"1111111111111111","title_slug":"linked-list-cycle-ii"}