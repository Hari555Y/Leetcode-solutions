{"id":605952575,"lang":"java","time":"5 months, 3 weeks","timestamp":1640256146,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/605952575/","is_pending":"Not Pending","title":"Merge Two Binary Trees","memory":"38.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode mergeTrees(TreeNode A, TreeNode B) {\n        if(A==null&&B==null){\n            return null;\n        }\n        if(A==null){\n            return B;\n        }\n        if(B==null){\n            return A;\n        }\n        A.val +=B.val;\n        A.left =mergeTrees(A.left, B.left); A.right =mergeTrees(A.right,B.right);\n        return A;\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-binary-trees"}