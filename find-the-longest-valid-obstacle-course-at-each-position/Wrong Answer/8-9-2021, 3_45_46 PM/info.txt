{"id":535693904,"lang":"java","time":"10 months, 1 week","timestamp":1628504146,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/535693904/","is_pending":"Not Pending","title":"Find the Longest Valid Obstacle Course at Each Position","memory":"N/A","code":"class Solution {\n    public int[] longestObstacleCourseAtEachPosition(int[] obstacles) {\n        int len = obstacles.length;\n        int[] dp = new int[len];\n        Arrays.fill(dp,1);\n      //  dp[0]=1;\n        for (int i=1; i<len;i++){\n            int ans = -1;\n            for (int j =i-1; j>=0; j--){\n                if(obstacles[j]<=obstacles[i]){\n                    ans = j;\n                    break;\n                    \n                }\n            }\n            System.out.println(ans);\n            if(ans!=-1){\n                dp[i]+=dp[ans];\n            }\n        }\n        return dp;\n    }\n\n}","compare_result":"111000110010000000000000000000000000000000000000000000000000000000000000000001","title_slug":"find-the-longest-valid-obstacle-course-at-each-position"}