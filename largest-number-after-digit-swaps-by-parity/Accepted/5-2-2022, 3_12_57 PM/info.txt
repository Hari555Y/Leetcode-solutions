{"id":691524808,"lang":"java","time":"1 month, 2 weeks","timestamp":1651484577,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/691524808/","is_pending":"Not Pending","title":"Largest Number After Digit Swaps by Parity","memory":"39.4 MB","code":"class Solution {\n    public int largestInteger(int num) {\n        ArrayList<Integer> eve  = new ArrayList<>();\n        ArrayList<Integer> od = new ArrayList<>();\n        int r = num;\n        while(num!=0){\n            int p = num%10;\n            if (p%2==0){\n                eve.add(p);  \n            }\n            else\n                od.add(p);\n            num = num/10;\n        }\n        Collections.sort(eve, Collections.reverseOrder());\n        Collections.sort(od, Collections.reverseOrder());\n        String s = String.valueOf(r);\n        int n = s.length();\n        int e =0; int o =0;\n        int nums =0;\n        for(int i =0; i<n ; i++){\n            int m = Character.getNumericValue(s.charAt(i));\n            if (m%2==0){\n                nums = 10* nums  + eve.get(e++);\n            }\n            else{\n                nums = 10*nums + od.get(o++);\n                \n            }\n        }\n        return nums;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"largest-number-after-digit-swaps-by-parity"}