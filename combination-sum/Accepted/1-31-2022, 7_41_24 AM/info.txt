{"id":631300508,"lang":"java","time":"4 months, 2 weeks","timestamp":1643595084,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/631300508/","is_pending":"Not Pending","title":"Combination Sum","memory":"45.1 MB","code":"class Solution {\n    \n    public List<List<Integer>> combinationSum(int[] candidates, int target) {\n        List<List<Integer>> ans=new ArrayList<>();\n        List<Integer> arr = new ArrayList<>();\n        help(0,target,candidates,ans,arr);\n        return ans;\n        \n    }\n    public void help(int i,int target,int[]ar,List<List<Integer>> ans, List<Integer> arr){\n       // List<Integer> arr=new ArrayList<>();\n        if(i==ar.length){\n            if(target==0){\n                ans.add(new ArrayList<>(arr));\n            }\n            return;\n        }\n        if(target>=ar[i]){\n            arr.add(ar[i]);\n            help(i,target-ar[i],ar,ans,arr);\n            arr.remove(arr.size()-1);\n        }\n        help(i+1,target,ar,ans,arr);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum"}