{"id":609971462,"lang":"java","time":"5 months, 2 weeks","timestamp":1640895180,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/609971462/","is_pending":"Not Pending","title":"Longest Uncommon Subsequence I","memory":"N/A","code":"class Solution {\n    public int findLUSlength(String a, String b) {\n        int[] arr = new int[26];\n        int[] brr = new int[26];\n        for(char c : a.toCharArray()){\n            arr[c-'a']++;\n        }\n        for(char c : b.toCharArray()){\n            brr[c-'a']++;\n        }\n        int ans = 0;\n        int ans2 =0;\n        for(int i =0; i<26; i++){\n            if (arr[i]-brr[i]>0){\n                ans += arr[i]-brr[i];\n            }\n        }\n        for(int i =0; i<26; i++){\n            if (brr[i]-arr[i]>0){\n                ans2 += brr[i]-arr[i];\n            }\n        }\n        if(ans==0 && ans2==0){\n            return -1;\n        }\n        return Math.max(ans, ans2);\n        \n        \n    }\n}","compare_result":"1110100000000000000000000000111111111100","title_slug":"longest-uncommon-subsequence-i"}