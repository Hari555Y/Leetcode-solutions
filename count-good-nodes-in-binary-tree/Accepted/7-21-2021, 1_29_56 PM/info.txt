{"id":525914304,"lang":"java","time":"10 months, 4 weeks","timestamp":1626854396,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/525914304/","is_pending":"Not Pending","title":"Count Good Nodes in Binary Tree","memory":"48.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int goodNodes(TreeNode root) {\n        if(root==null){\n            return 0;\n        }\n        if(root.left== null && root.right ==null){\n            return 1;\n        }\n        int count =1;\n        Queue<TreeNode> q = new LinkedList<TreeNode>();\n        q.add(root);\n        while(!q.isEmpty()){\n            TreeNode curr = q.peek();\n            q.poll();\n            if(curr.left!=null){\n                if(curr.left.val<curr.val){\n                    curr.left.val = curr.val;\n                    \n                }\n                else{\n                    count++;\n                }\n                q.add(curr.left);\n            }\n            if(curr.right!=null){\n                if(curr.right.val<curr.val){\n                    curr.right.val = curr.val;\n                }\n                else{\n                    count++;\n                }\n                q.add(curr.right);\n            }\n        }\n        return count;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-good-nodes-in-binary-tree"}