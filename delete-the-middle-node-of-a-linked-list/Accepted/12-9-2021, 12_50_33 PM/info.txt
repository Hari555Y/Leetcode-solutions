{"id":599254209,"lang":"java","time":"6 months, 1 week","timestamp":1639034433,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/599254209/","is_pending":"Not Pending","title":"Delete the Middle Node of a Linked List","memory":"64.6 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode deleteMiddle(ListNode head) {\n        if (head==null || head.next==null){\n            return null;\n        }\n        else if (head.next.next==null){\n            head.next=null;\n            return head;\n        }\n        else{\n            ListNode hare = head.next;\n            ListNode tort = head;\n            while(hare.next!=null && hare.next.next!=null){\n                hare = hare.next.next;\n                tort = tort.next;\n                \n            }\n            tort.next = tort.next.next;\n            return head;\n        }\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-the-middle-node-of-a-linked-list"}