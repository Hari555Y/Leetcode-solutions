{"id":702969022,"lang":"java","time":"3 weeks, 5 days","timestamp":1652988223,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/702969022/","is_pending":"Not Pending","title":"Binary Tree Tilt","memory":"45.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    static int sum =0;\n    public int findTilt(TreeNode root) {\n        sum =0;\n        if (root ==null){\n            return 0;\n        }\n        sum_nodes(root);\n        return sum;\n        \n    }\n    public static int sum_nodes(TreeNode root){\n        if (root==null){\n            return 0;\n        }\n        int lsum = sum_nodes(root.left);\n        int rsum = sum_nodes(root.right);\n        sum += Math.abs(lsum - rsum);\n        return lsum + rsum + root.val;\n    }\n}\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-tilt"}