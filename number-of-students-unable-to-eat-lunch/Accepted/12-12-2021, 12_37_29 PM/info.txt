{"id":600620774,"lang":"java","time":"6Â months","timestamp":1639292849,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/600620774/","is_pending":"Not Pending","title":"Number of Students Unable to Eat Lunch","memory":"36.9 MB","code":"class Solution {\n    public int countStudents(int[] students, int[] sandwiches) {\n        Queue<Integer> stu = new LinkedList<Integer>();\n        Queue<Integer> sand= new LinkedList<>();\n        int n= students.length;\n        for(int i =0; i<n; i++){\n            stu.add(students[i]);\n            sand.add(sandwiches[i]);\n        }\n        int bool =0;\n        while(!stu.isEmpty()){\n            if (stu.peek()== sand.peek()){\n                stu.poll();\n                sand.poll();\n                bool =0;\n                \n            }\n            else{\n                stu.add(stu.poll());\n                bool++;\n            }\n            if (bool == stu.size()){\n                return stu.size();            \n            }\n        }\n        return 0;\n        \n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"number-of-students-unable-to-eat-lunch"}