{"id":711513576,"lang":"java","time":"2Â weeks","timestamp":1654026268,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/711513576/","is_pending":"Not Pending","title":"Maximum Number of Removable Characters","memory":"N/A","code":"class Solution {\n    public int maximumRemovals(String s, String p, int[] removable) {\n       // int kj = 0;\n        int n = removable.length;\n        StringBuilder sb = new StringBuilder(s);\n        int st = 0;\n        int e  = n-1;\n        while(st<=e){\n            int mid = (st) + (e-st)/2;\n            for(int i =0; i<=mid; i++){\n                sb.setCharAt(i, '-');\n            }\n            if (cuntains(sb.toString(), p)){\n                st = mid+1;\n            }\n            else{\n                e = mid;\n            }\n            sb = new StringBuilder(s);\n            \n        }\n        return e;\n    }\n    public static boolean cuntains(String s, String p){\n        int i =0; int j =0;\n        while(i<p.length() && j<s.length()){\n            char m  = p.charAt(i);\n            char g  = s.charAt(j);\n            if (m==g){\n                i++;\n            }\n            j++;\n            \n        }\n        return  i == p.length() ? true :false;\n        \n    }\n    \n//     public static boolean isposb(int[] a, int[] b){\n//         for(int i =0; i<26; i++){\n//             if(a[i]<b[i]){\n//                 return false;\n//             }\n            \n//         }\n//         return true;\n//     }\n    \n}","compare_result":"1000000000000000000000000000000000000000000000000000000000000000000","title_slug":"maximum-number-of-removable-characters"}